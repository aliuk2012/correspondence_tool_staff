= GovukElementsErrorsHelper.error_summary @user,
    "#{pluralize(@user.errors.count, t('common.error'))} #{ t('common.summary_error')}",
    ""

- content_for :heading
  = t('.heading')

= render partial: 'layouts/header'

= form_for @case, url: admin_cases_path do |f|

  = f.text_field :name

  = f.email_field :email

  = f.text_area :postal_address, {rows: 4}

  = f.radio_button_fieldset :requester_type,
          choices: [:academic_business_charity,
                  :journalist,
                  :member_of_the_public,
                  :offender,
                  :solicitor,
                  :staff_judiciary,
                  :what_do_they_know]


  .form-group
    = f.gov_uk_date_field :received_date, {legend_text: t('.received_date'), form_hint_text: t('.received_date_copy'), today_button: {class: 'button-secondary'} }

  #delivery-method
    = f.radio_button_fieldset :delivery_method, choices: [:sent_by_email, :sent_by_post]

  #delivery-method-fields
    .panel.panel-border-thin
      = f.text_field :subject

      = f.text_area :message, {rows: 10}

      .grid-row
        .column-two-thirds
          div class="#{case_uploaded_request_files_class}" id=case_uploaded_request_files_id
            = render partial: 'shared/dropzone_form',
                     locals: {s3_direct_post: @s3_direct_post,
                              file_input_name: 'case[uploaded_request_files][]' }

  = f.check_box_fieldset :flag_for_disclosure_specialists, [:flagged_for_disclosure_specialist_clearance?, :flagged_for_press_office_clearance?, :flagged_for_private_office_clearance?]

  = f.fields_for :responding_team do |responding_team|
    = responding_team.collection_select :id, BusinessUnit.responding, :id, :name

  div.i_wish_i_was_a_gov_uk_element
    = label_tag :target_state
    = select_tag :target_state, options_for_select(@target_states, @selected_state)

  = f.submit t('.create'), {class: 'button'}
